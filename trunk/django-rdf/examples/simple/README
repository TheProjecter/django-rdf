This directory contains a simple example project, using a sqlite3 database. 

It doesn't really do anything except let you browse the models that implement 
the triple store, using the admin site.


SHELL ENVIRONMENT

You can set up sqlite3 and PLY like so, on Mac OS X with Macports:

    sudo port install py25-sqlite3 
    sudo port install py25-ply

On Debian-variants (incl. Ubuntu), use apt-get not port, and find the right 
package names using aptitude search. 

Then, set up your shell environment (again assuming Mac OS X or a Linux box):

    cd <...>/django-rdf/examples/simple
    source .bashrc
    cd lib
    rm django
    ln -s <path-to-django>/django
    ln -s ../../../rdf

The django symbolic link is just there to make sure Django is on the PYTHONPATH. 
You probably already have it somewhere else, or installed into site-packages. 

The rdf symbolic link is necessary for the sample project to find the rdf app.

(Instructions for Windows hosts would be appreciated - anyone?)


ONTOLOGY

Now you need to get the ontology files installed. This is simple:

    cd <...>/django-rdf/examples/simple/lib/rdf/ontology/
    curl http://django-rdf.googlecode.com/files/ontology-0.1.tar.gz | tar zx

Don't forget to pipe to tar, otherwise your screen just fills with garbage.

And, this step actually configures the RDF app itself, not just the simple 
example project, because lib/rdf is a symlink to the app (if things start 
going wrong for you, you might check that this symlink is behaving right).


TEST DRIVE

First try running the tests - there should be no failures or errors:

    ./manage.py test

Then boot the devserver:

    ./manage.py syncdb
    ./manage.py runserver

You should be up and running. Just point a browser at http://localhost:8000/admin.

You won't have to repeat the setup steps for the other examples. Try the auth 
example next, perhaps? 

